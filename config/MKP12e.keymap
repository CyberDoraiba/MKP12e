/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// layers
#define DEFAULT 0
#define ART     1
#define RGB     2
#define SYS     3

&encoder_1 {
    status = "okay";
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
        triggers-per-rotation = <20>;
    };

    behaviors {
        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //                               --------------
            // |-----------------------------| 撤銷 | 重做 |
            // |    滴管   | 圖層面板 |  擦子 |    全螢幕   | 
            // |  選取工具 | 變形工具 |  顏色  |    速選    |--------
            // |   快速層  |     清除圖層     |   Layer3   |  畫筆  |
            // ----------------------------------------------------
            bindings = <
                &kp M       &kp L       &kp E      &kp LG(N0)
                &kp S       &kp V       &kp C      &kp SPACE
                &mo 1           &kp LG(BSPC)        &to 2       &kp B
            >;
            sensor-bindings = <&inc_dec_kp LG(Z) LG(LS(Z))>;
        };

        art_layer {
            //                                --------------
            // |------------------------------| 撤銷 | 重做 |
            // | 操作面板 |   HSB   | 色彩調整 |    全螢幕   | 
            // |   複製  |   剪下   |   貼上   | 複製選取內容 |----------
            // |    NA   |      取消選取      |      NA     | 拷貝全部 |
            // -------------------------------------------------------
            bindings = <
                &kp LG(K)  &kp LG(U)  &kp LG(B)     &kp LG(N0)
                &kp LG(C)  &kp LG(X)  &kp LG(V)     &kp LG(J)
                &none           &kp LG(D)           &none     &kp LG(A)
            >;
            sensor-bindings = <&inc_dec_kp LG(Z) LG(LS(Z))>;
        };

        rgb_layer {
            //                               ---------------------
            // |-----------------------------| RGB_BRI | RGB_BRD |
            // | RGB_HUI | RGB_SAI | RGB_SPI |      RGB_TOG      | 
            // | RGB_HUD | RGB_SAD | RGB_SPD |       EP_ON       |-------------- 
            // | TO BT_L |      RGB_EFR      |       Layer3      |    EP_OFF   |
            // -----------------------------------------------------------------
            bindings = <
                &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI     &rgb_ug RGB_TOG
                &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD     &ext_power EP_ON
                &mo 3           &rgb_ug RGB_EFR                     &to 0             &ext_power EP_OFF
            >;
            sensor-bindings = <&rgb_encoder>;
        };

        sys_layer {
            //                                  ---------------------
            // |--------------------------------|    NA   |    NA   |
            // | BT_SEL 0 | BT_SEL 1 | BT_SEL 2 |         NA        | 
            // | BT_SEL 3 | BT_SEL 4 | BT_CLR   |       OUT_BLE     |------------
            // |    NA    |     sys_reset       |         NA        |  OUT_USB  |
            // ------------------------------------------------------------------
            bindings = <
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2     &none
                &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR       &out OUT_BLE
                &none            &sys_reset                &none       &out OUT_USB    
            >;
        };
    };
};